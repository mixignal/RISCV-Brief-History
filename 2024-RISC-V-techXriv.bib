
@misc{microchip_attiny85_nodate,
	title = {{ATtiny85}: 8-bit {AVR} {RISC}-based {Microcontroller}},
	url = {https://www.microchip.com/en-us/product/attiny85},
	abstract = {The high-performance, low-power Microchip 8-bit AVR\&reg; RISC-based microcontroller combines 8 KB ISP Flash memory, 512B EEPROM, 512B SRAM, six general purpose I/O lines, 32 general purpose working registers, one 8-bit timer/counter with compare modes, ...},
	language = {en-US},
	urldate = {2024-01-21},
	author = {Microchip},
}

@misc{stmicroelectronics_stm32_nodate,
	title = {{STM32}: {Arm} {Cortex}-{M} 32-bit {Microcontrollers} ({MCUs})},
	url = {https://www.st.com/en/microcontrollers-microprocessors/stm32-32-bit-arm-cortex-mcus.html},
	abstract = {Microcontrollers from the STM32 MCU family are based on Arm Cortex-M processors and designed to offer new degrees of freedom to MCU users.},
	language = {en},
	urldate = {2024-01-21},
	author = {STMicroelectronics},
}

@article{sinha_survey_2017,
	title = {A survey on {LPWA} technology: {LoRa} and {NB}-{IoT}},
	volume = {3},
	issn = {2405-9595},
	shorttitle = {A survey on {LPWA} technology},
	url = {https://www.sciencedirect.com/science/article/pii/S2405959517300061},
	doi = {10.1016/j.icte.2017.03.004},
	abstract = {By 2020, more than twenty five billion devices would be connected through wireless communications. In accordance with the rapid growth of the internet of things (IoT) market, low power wide area (LPWA) technologies have become popular. In various LPWA technologies, narrowband (NB)-IoT and long range (LoRa) are two leading technologies. In this paper, we provide a comprehensive survey on NB-IoT and LoRa as efficient solutions connecting the devices. It is shown that unlicensed LoRa has advantages in terms of battery lifetime, capacity, and cost. Meanwhile, licensed NB-IoT offers benefits in terms of QoS, latency, reliability, and range.},
	number = {1},
	urldate = {2024-01-21},
	journal = {ICT Express},
	author = {Sinha, Rashmi Sharan and Wei, Yiqiao and Hwang, Seung-Hoon},
	month = mar,
	year = {2017},
	keywords = {IoT, LoRa, LPWA, mMTC, NB-IoT},
	pages = {14--21},
}

@incollection{bor_lora_2016,
	address = {AUT},
	title = {{LoRa} for the {Internet} of {Things}},
	copyright = {none},
	isbn = {978-0-9949886-0-7},
	url = {https://eprints.lancs.ac.uk/id/eprint/77615/},
	abstract = {New transceiver technologies have emerged which enable power efficient communication over very long distances. Examples of such Low-Power Wide-Area Network (LPWAN)technologies are LoRa, Sigfox and Weightless. A typicalapplication scenario for these technologies is city wide meter reading collection where devices send readings at very low frequency over a long distance to a data concentrator (one-hop networks). We argue that these transceiversare potentially very useful to construct more generic Internet of Things (IoT) networks incorporating multi-hop bi-directional communication enabling sensing and actuation. Furthermore, these transceivers have interesting features notavailable with more traditional transceivers used for IoT networks which enable construction of novel protocol elements. In this paper we present a performance and capabilityanalysis of a currently available LoRa transceiver. We describe its features and then demonstrate how such transceivercan be put to use efficiently in a wide-area application scenario. In particular we demonstrate how unique featuressuch as concurrent non-destructive transmissions and carrier detection can be employed. Our deployment experiment demonstrates that 6 LoRa nodes can form a network covering 1.5 ha in a built up environment, achieving a potential lifetime of 2 year on 2 AA batteries and delivering data within 5 s and reliability of 80\%.},
	language = {en},
	urldate = {2024-01-21},
	publisher = {Junction Publishing},
	author = {Bor, Martin and Vidler, John Edward and Roedig, Utz},
	month = feb,
	year = {2016},
	note = {Conference Name: EWSN '16 Proceedings of the 2016 International Conference on Embedded Wireless Systems and Networks
Meeting Name: EWSN '16 Proceedings of the 2016 International Conference on Embedded Wireless Systems and Networks
Num Pages: 6},
	pages = {361--366},
}

@misc{noauthor_mcs-51_2023,
	title = {{MCS}-51 : 8051 microcontroller},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/wiki/MCS-51},
	abstract = {The Intel MCS-51 (commonly termed 8051) is a single chip microcontroller (MCU) series developed by Intel in 1980 for use in embedded systems. The architect of the Intel MCS-51 instruction set was John H. Wharton. Intel's original versions were popular in the 1980s and early 1990s, and enhanced binary compatible derivatives remain popular today. It is a complex instruction set computer, but also has some of the features of RISC architectures, such as a large register set and register windows, and has separate memory spaces for program instructions and data.
Intel's original MCS-51 family was developed using N-type metal–oxide–semiconductor (NMOS) technology, like its predecessor Intel MCS-48, but later versions, identified by a letter C in their name (e.g., 80C51) use complementary metal–oxide–semiconductor (CMOS) technology and consume less power than their NMOS predecessors. This made them more suitable for battery-powered devices.
The family was continued in 1996 with the enhanced 8-bit MCS-151 and the 8/16-bit/32-bit MCS-251 family of binary compatible microcontrollers. While Intel no longer manufactures the MCS-51, MCS-151 and MCS-251 family, enhanced binary compatible derivatives made by numerous vendors remain popular today. Some derivatives integrate a digital signal processor (DSP) or a floating point unit (coprocessor, FPU). Beyond these physical devices, several companies also offer MCS-51 derivatives as IP cores for use in field-programmable gate array (FPGA) or application-specific integrated circuit (ASIC) designs.},
	language = {en},
	urldate = {2024-01-21},
	journal = {Wikipedia},
	month = dec,
	year = {2023},
	note = {Page Version ID: 1192578186},
}

@misc{asanovic_instruction_2014,
	title = {Instruction sets should be free: {The} case for risc-v},
	url = {https://people.eecs.berkeley.edu/~krste/papers/EECS-2014-146.pdf},
	publisher = {University of California, Berkeley},
	author = {Asanovi\{{\textbackslash}'c\}, Krste and Patterson, Daivd A.},
	year = {2014},
}

@article{faggin_history_1996,
	title = {The history of the 4004},
	volume = {16},
	issn = {1937-4143},
	url = {https://ieeexplore.ieee.org/abstract/document/546561},
	doi = {10.1109/40.546561},
	abstract = {Twenty-five years ago, in November 1971, an advertisement appeared in Electronic News: "Announcing a new era in integrated electronics, a microprogrammable computer on a chip". The ad was placed by Intel Corporation of Santa Clara, California, then just over three years old. From that modest but prophetic beginning, the microprocessor market has grown into a multibillion-dollar business, and Intel has maintained a leadership position, particularly in microprocessors for personal computers. The authors look at the design and development of the 4004.},
	number = {6},
	urldate = {2024-01-21},
	journal = {IEEE Micro},
	author = {Faggin, F. and Hoff, M.E. and Mazor, S. and Shima, M.},
	month = dec,
	year = {1996},
	note = {Conference Name: IEEE Micro},
	pages = {10--20},
}

@misc{noauthor_intel_2024,
	title = {Intel 8080},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Intel_8080&oldid=1196785311},
	abstract = {The Intel 8080 ("eighty-eighty") is the second 8-bit microprocessor designed and manufactured by Intel. It first appeared in April 1974 and is an extended and enhanced variant of the earlier 8008 design, although without binary compatibility. The initial specified clock rate or frequency limit was 2 MHz, with common instructions using 4, 5, 7, 10, or 11 cycles. As a result, the processor is able to execute several hundred thousand instructions per second. Two faster variants, the 8080A-1 (sometimes referred to as the 8080B) and 8080A-2, became available later with clock frequency limits of 3.125 MHz and 2.63 MHz respectively.
The 8080 needs two support chips to function in most applications: the i8224 clock generator/driver and the i8228 bus controller. It is implemented in N-type metal–oxide–semiconductor logic (NMOS) using non-saturated enhancement mode transistors as loads thus demanding a +12 V and a −5 V voltage in addition to the main transistor–transistor logic (TTL) compatible +5 V.
Although earlier microprocessors were commonly used in mass-produced devices such as calculators, cash registers, computer terminals, industrial robots, and other applications, the 8080 saw greater success in a wider set of applications, and is largely credited with starting the microcomputer industry. Several factors contributed to its popularity: its 40-pin package made it easier to interface than the 18-pin 8008, and also made its data bus more efficient; its NMOS implementation gave it faster transistors than those of the P-type metal–oxide–semiconductor logic (PMOS) 8008, while also simplifying interfacing by making it TTL-compatible; a wider variety of support chips were available; its instruction set was enhanced over the 8008; and its full 16-bit address bus (versus the 14-bit one of the 8008) enabled it to access 64 KB of memory, four times more than the 8008's range of 16 KB. It was used in the Altair 8800 and subsequent S-100 bus personal computers until it was replaced by the Z80 in this role, and was the original target CPU for CP/M operating systems developed by Gary Kildall.
The 8080 directly influenced the later x86 architecture. Intel designed the 8086 to have its assembly language be similar enough to the 8080, with most instructions mapping directly onto each other, that transpiled 8080 assembly code could be executed on the 8086.},
	language = {en},
	urldate = {2024-01-21},
	journal = {Wikipedia},
	month = jan,
	year = {2024},
	note = {Page Version ID: 1196785311},
}

@inproceedings{blem_power_2013,
	title = {Power struggles: {Revisiting} the {RISC} vs. {CISC} debate on contemporary {ARM} and x86 architectures},
	shorttitle = {Power struggles},
	url = {https://ieeexplore.ieee.org/abstract/document/6522302},
	doi = {10.1109/HPCA.2013.6522302},
	abstract = {RISC vs. CISC wars raged in the 1980s when chip area and processor design complexity were the primary constraints and desktops and servers exclusively dominated the computing landscape. Today, energy and power are the primary design constraints and the computing landscape is significantly different: growth in tablets and smartphones running ARM (a RISC ISA) is surpassing that of desktops and laptops running x86 (a CISC ISA). Further, the traditionally low-power ARM ISA is entering the high-performance server market, while the traditionally high-performance x86 ISA is entering the mobile low-power device market. Thus, the question of whether ISA plays an intrinsic role in performance or energy efficiency is becoming important, and we seek to answer this question through a detailed measurement based study on real hardware running real applications. We analyze measurements on the ARM Cortex-A8 and Cortex-A9 and Intel Atom and Sandybridge i7 microprocessors over workloads spanning mobile, desktop, and server computing. Our methodical investigation demonstrates the role of ISA in modern microprocessors' performance and energy efficiency. We find that ARM and x86 processors are simply engineering design points optimized for different levels of performance, and there is nothing fundamentally more energy efficient in one ISA class or the other. The ISA being RISC or CISC seems irrelevant.},
	urldate = {2024-01-21},
	booktitle = {2013 {IEEE} 19th {International} {Symposium} on {High} {Performance} {Computer} {Architecture} ({HPCA})},
	author = {Blem, Emily and Menon, Jaikrishnan and Sankaralingam, Karthikeyan},
	month = feb,
	year = {2013},
	note = {ISSN: 1530-0897},
	pages = {1--12},
}

@inproceedings{patterson_risc_1998,
	title = {{RISC} {I}: {A} reduced instruction set {VLSI} computer},
	booktitle = {25 years of the international symposia on {Computer} architecture (selected papers)},
	author = {Patterson, Daivd A. and Sequin, Carlo H},
	year = {1998},
	pages = {216--230},
}

@misc{redmond_risc-v_2021,
	title = {{RISC}-{V}: {The} {Open} {Era} of {Computing}},
	url = {https://riscv.org/wp-content/uploads/2021/05/RISC-V-New-Era-04-19-2021.pptx},
	author = {Redmond, Calista},
	year = {2021},
}
